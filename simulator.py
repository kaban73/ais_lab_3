import time
import random
from neo4j_manager import Neo4jManager
from fuzzy_logic import InferenceEngine


class StreetLightSimulator:
    def __init__(self):
        self.neo4j_manager = Neo4jManager()
        self.engine = InferenceEngine(self.neo4j_manager)
        self.time = 18  # –Ω–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
        self.weather_states = ["clear", "cloudy", "rainy"]
        self.current_weather = "clear"

    def simulate_hour(self):
        """–°–∏–º—É–ª—è—Ü–∏—è –æ–¥–Ω–æ–≥–æ —á–∞—Å–∞"""
        self.time = (self.time + 1) % 24

        # –ò–∑–º–µ–Ω—è–µ–º –ø–æ–≥–æ–¥—É (—Å–ª—É—á–∞–π–Ω–æ)
        if random.random() < 0.2:  # 20% chance to change weather
            self.current_weather = random.choice(self.weather_states)

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏
        if 6 <= self.time <= 18:  # –¥–µ–Ω—å
            base_light = 0.7 + random.uniform(-0.2, 0.2)
        else:  # –Ω–æ—á—å
            base_light = 0.2 + random.uniform(-0.1, 0.1)

        # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–≥–æ–¥—ã
        if self.current_weather == "rainy":
            light_level = max(0.1, base_light - 0.3)
        elif self.current_weather == "cloudy":
            light_level = max(0.1, base_light - 0.2)
        else:
            light_level = base_light

        light_level = min(1.0, max(0.0, light_level))

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        activated_rules = self.engine.process_sensors(
            time=self.time,
            light=light_level,
            weather=self.current_weather
        )

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è
        if activated_rules:
            # –ë–µ—Ä–µ–º –ø—Ä–∞–≤–∏–ª–æ —Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
            main_rule = min(activated_rules, key=lambda x: x['priority'])
            print(f"üö¶ –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ: {main_rule['action_name']} (–∏–∑ –ø—Ä–∞–≤–∏–ª–∞: {main_rule['rule_name']})")
        else:
            print("üö¶ –î–µ–π—Å—Ç–≤–∏–µ: —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")

        print("-" * 50)

    def run_simulation(self, hours=24):
        """–ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤"""
        print("üöÄ –ó–ê–ü–£–°–ö –°–ò–ú–£–õ–Ø–¢–û–†–ê –£–õ–ò–ß–ù–û–ì–û –û–°–í–ï–©–ï–ù–ò–Ø")
        print("=" * 50)

        for hour in range(hours):
            print(f"üïê –ß–∞—Å {hour + 1}/24 | –í—Ä–µ–º—è: {self.time}:00")
            self.simulate_hour()
            time.sleep(1)  # –ü–∞—É–∑–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏

        self.neo4j_manager.close()


# –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏
if __name__ == "__main__":
    simulator = StreetLightSimulator()
    simulator.run_simulation(hours=6)  # –¢–µ—Å—Ç–∏—Ä—É–µ–º 6 —á–∞—Å–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞